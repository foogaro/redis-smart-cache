config {
    info {
        description = 'Redis Smart Cache'
        inceptionYear = '2022'
        tags = ['redis', 'caching', 'jdbc']
        
        links {
            website      = "https://github.com/redis-field-engineering/${project.rootProject.name}"
            issueTracker = "https://github.com/redis-field-engineering/${project.rootProject.name}/issues"
            scm          = "https://github.com/redis-field-engineering/${project.rootProject.name}.git"
        }
        
        scm {
            url                 = "https://github.com/redis-field-engineering/${project.rootProject.name}"
            connection          = "scm:git:https://github.com/redis-field-engineering/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:redis-field-engineering/${project.rootProject.name}.git"
        }
        
        specification {
            enabled = true
        }
        
        implementation {
            enabled = true
        }
        
        people {
            person {
                id = 'jruaux'
                name = 'Julien Ruaux'
                roles = ['developer', 'author']
            }
        }
    }
    
    docs {
        javadoc {
            options {
                autoLinks {
                    enabled = false
                }
            }
            aggregate {
                enabled = false
            }
        }
    }

    licensing {
        enabled = false
        licenses {
            license {
                id = 'MIT'
            }
        }
    }
    
    coverage {
        jacoco {
            enabled = true
            toolVersion = jacocoVersion
        }
    }
}

allprojects {
    repositories {
        mavenLocal()
        gradlePluginPortal()
    }
    
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

subprojects {
    config {
        info {
            description = project.project_description
        }
        coverage {
            jacoco {
		        toolVersion = jacocoVersion
            }
        }
    }
    
    license {
        exclude('build/**')
    }
    
    dependencies {
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
        testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher'
        testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: testcontainersVersion
        testImplementation(group: 'com.redis', name: 'testcontainers-redis', version: testcontainersRedisVersion) {
            exclude group: 'com.redis', module: 'lettucemod'
        }
    }
    
    test {
        useJUnitPlatform()
    }
    
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.name == 'lettuce-core' ) {
                details.useVersion lettuceVersion
            }
        }
    }
    
}